services:
  heimdall:
    image: linuxserver/heimdall:2.5.4
    container_name: heimdall
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/heimdall:/config
    ports:
      - 8092:80

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    network_mode: host
    restart: unless-stopped
    volumes:
      - ${CONFIG_PATH}/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8091:80/tcp"
    environment:
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/pihole/config:/etc/pihole
      - ${CONFIG_PATH}/pihole/dnsmasq.d:/etc/dnsmasq.d
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # mqtt:
  #   container_name: mqtt
  #   image: eclipse-mosquitto
  #   restart: unless-stopped
  #   volumes:
  #     - ${CONFIG_PATH}/mosquitto:/mosquitto
  #   ports:
  #     - 1883:1883
  #     - 9001:9001
  #   command: "mosquitto -c /mosquitto-no-auth.conf"
  #   labels:
  #     - "com.centurylinklabs.watchtower.enable=true"

  # zigbee2mqtt:
  #   container_name: zigbee2mqtt
  #   image: koenkk/zigbee2mqtt
  #   restart: unless-stopped
  #   volumes:
  #     - ${CONFIG_PATH}/zigbee2mqtt:/app/data
  #     - /run/udev:/run/udev:ro
  #   ports:
  #     - 8080:8080
  #   environment:
  #     - TZ=${TZ}
  #   devices:
  #     - /dev/ttyUSB0:/dev/ttyUSB0
  #   labels:
  #     - "com.centurylinklabs.watchtower.enable=true"

  G-Box:
    container_name: g-box
    image: ailg/g-box:hostmode
    restart: unless-stopped
    network_mode: host
    environment:
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/g-box:/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  Aria2-Pro:
    container_name: aria2-pro
    image: p3terx/aria2-pro
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=022
      - RPC_SECRET=admin
      - RPC_PORT=6800
      - LISTEN_PORT=6888
      - DISK_CACHE=64M
      - IPV6_MODE=false
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/aria2:/config
      - ${MEDIA_PATH}/downloads:/downloads
    ports:
      - 6800:6800
      - 6888:6888
      - 6888:6888/udp
    logging:
      driver: json-file
      options:
        max-size: 1m
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  AriaNg:
    container_name: ariang
    image: p3terx/ariang
    restart: unless-stopped
    command: --port 6880
    ports:
      - 6880:6880
    logging:
      driver: json-file
      options:
        max-size: 1m
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  cloudflare:
    container_name: cloudflare
    image: cloudflare/cloudflared:latest
    restart: always
    command: "tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  bitwarden:
    container_name: vaultwarden
    image: vaultwarden/server
    restart: unless-stopped
    volumes:
      - ${CONFIG_PATH}//vaultwarden/:/data/
    ports:
      - 3456:80
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  pixman:
    container_name: pixman
    image: pixman/pixman
    restart: unless-stopped
    ports:
      - 5050:5000
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_SCHEDULE: "0 0 5 * * *"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_LABEL_ENABLE: "true"
      TZ: "${TZ}"
      WATCHTOWER_NOTIFICATION_REPORT: "true"
      WATCHTOWER_NOTIFICATION_URL: >
        telegram://${TELEGRAM_TOKEN}@telegram?chats=5385841963
      WATCHTOWER_NOTIFICATION_TEMPLATE: |
        {{- if .Report -}}
          {{- with .Report -}}
        {{len .Scanned}} Scanned, {{len .Updated}} Updated, {{len .Failed}} Failed
              {{- range .Updated}}
        - {{.Name}} ({{.ImageName}}): {{.CurrentImageID.ShortID}} updated to {{.LatestImageID.ShortID}}
              {{- end -}}
              {{- range .Fresh}}
        - {{.Name}} ({{.ImageName}}): {{.State}}
            {{- end -}}
            {{- range .Skipped}}
        - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
            {{- end -}}
            {{- range .Failed}}
        - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
            {{- end -}}
          {{- end -}}
        {{- else -}}
          {{range .Entries -}}{{.Message}}{{"\n"}}{{- end -}}
        {{- end -}}
